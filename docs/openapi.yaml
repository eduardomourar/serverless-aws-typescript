openapi: "3.0.1"
info:
  title: "AWS Serverless Messaging Delivery API"
  version: "0.1.0"
servers:
- url: "https://2jgsc4cuaa.execute-api.eu-west-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "v1"
paths:
  /message:
    get:
      summary: Lists all messages stored
      security:
      - authorize: []
      parameters:
        - name: recipient
          in: query
          required: true
          description: The recipient (either Email or phone number) of the
            message to filter
          schema:
            type: string
      responses:
        '200':
          description: "200 response"
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Messages"
        '401':
             $ref: '#/components/responses/UnauthorizedError'
    post:
      summary: Publish message to be processed
      security:
      - authorize: []
      requestBody:
        description: Message details to be published
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageWithoutId"
      responses:
        '200':
          description: "200 response"
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Message"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /message/{messageId}:
    get:
      summary: Retrieve specific message by identifier
      security:
      - authorize: []
      parameters:
        - name: messageId
          in: path
          required: true
          description: The identifier of the message to retrieve
          schema:
            type: string
      responses:
        '200':
          description: "200 response"
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Message"
        '401':
             $ref: '#/components/responses/UnauthorizedError'
components:
  schemas:
    MessageWithId:
      type: object
      required:
        - messageId
        - body
        - recipient
        - kind
      properties:
        messageId:
          type: string
        timestamp:
          type: number
        body:
          type: string
        recipient:
          type: string
        kind:
          type: string
          enum:
            - email
            - sms            
        sender:
          type: string
        subject:
          type: string
    MessageWithoutId:
      type: object
      required:
        - body
        - recipient
        - kind
      properties:
        body:
          type: string
        recipient:
          type: string
        kind:
          type: string
          enum:
            - email
            - sms            
        sender:
          type: string
        subject:
          type: string
    Message:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/MessageWithId"
    Messages:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/MessageWithId"
  responses:
    Cors:
      description: CORS headers
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: "string"
        Access-Control-Allow-Methods:
          schema:
            type: "string"
        Access-Control-Allow-Credentials:
          schema:
            type: "string"
        Access-Control-Allow-Headers:
          schema:
            type: "string"
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
  securitySchemes:
    authorize:
      type: http
      scheme: basic
